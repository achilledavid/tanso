generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int                @id @default(autoincrement())
  username     String             @unique
  email        String             @unique
  firstname    String             @default("")
  lastname     String             @default("")
  avatarUrl    String?
  createdAt    DateTime           @default(now())
  AccessRights AccessAuthorized[]
  Projects     Project[]

  @@map("users")
}

model Project {
  id               Int                @id @default(autoincrement())
  uuid             String             @unique @default(uuid())
  name             String
  createdAt        DateTime           @default(now())
  userId           Int
  isPublic         Boolean            @default(false)
  AccessAuthorized AccessAuthorized[]
  Pads             Pad[]
  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("projects")
}

model Pad {
  id          Int     @id @default(autoincrement())
  url         String?
  fileName    String?
  keyBinding  String?
  projectUuid String
  isLooped    Boolean @default(false)
  project     Project @relation(fields: [projectUuid], references: [uuid], onDelete: Cascade)

  @@map("pads")
}

model AccessAuthorized {
  id          Int      @id @default(autoincrement())
  userEmail   String
  projectUuid String
  createdAt   DateTime @default(now())
  project     Project  @relation(fields: [projectUuid], references: [uuid], onDelete: Cascade)
  user        User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@map("access_authorized")
}
